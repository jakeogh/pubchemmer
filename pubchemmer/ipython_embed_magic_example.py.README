```
$ cat embed_class_long.py 
#!/usr/bin/env python

import os
import sys
import click
from traitlets.config.loader import Config
from IPython.core.magic import register_line_magic
from IPython.terminal.prompts import Prompts, Token
from IPython.terminal.embed import InteractiveShellEmbed
from icecream import ic

from IPython.core.magic import (Magics, magics_class, line_magic, cell_magic, line_cell_magic)
from IPython.core.magic_arguments import (argument, magic_arguments, parse_argstring)
from IPython.core.magic import needs_local_scope


class CustomPrompt(Prompts):
    def in_prompt_tokens(self, cli=None):
        return [(Token.Prompt, 'In ['),
                (Token.PromptNum, str(self.shell.execution_count)),
                (Token.Prompt, ']: '),
                (Token, os.getcwd()),
                (Token.Prompt, ' >>>: ')]

try:
    get_ipython
except NameError:
    nested = 0
    cfg = Config()
    cfg.TerminalInteractiveShell.prompts_class=CustomPrompt

    # why wont this execute?
    # https://github.com/ipython/ipython/blob/master/IPython/core/shellapp.py#L103
    cfg.InteractiveShellApp.exec_lines = [
    'print("\\nimporting some things\\n")',
    'import math',
    "math"
    ]

else:
    print("Running nested copies of IPython.")
    print("The prompts for the nested copy have been modified")
    cfg = Config()
    nested = 1

ipyshell = InteractiveShellEmbed(config=cfg,
                                 banner1='Dropping into IPython',
                                 exit_msg='Leaving Interpreter.')




# The class MUST call this class decorator at creation time
@magics_class
class MyMagics(Magics):

    @needs_local_scope
    @line_magic
    @magic_arguments()
    @argument('-o', '--option', help='An optional argument.')
    @argument('arg', type=int, help='An integer positional argument.')
    def magic_cool(self, arg, **kwargs):
        """ A really cool magic command."""
        #print("local_ns:", local_ns)
        ic(arg)
        ic(kwargs)
        args = parse_argstring(self.magic_cool, arg)
        ic(args)


    @line_magic
    def lmagic(self, line):
        "my line magic"
        print("Full access to the main IPython object:", self.shell)
        print("Variables in the user namespace:", list(self.shell.user_ns.keys()))
        return line

    @needs_local_scope
    @line_magic
    @magic_arguments()
    @argument('arg', type=str)
    def click_invoke(self, arg, **kwargs):
        ic(arg)
        ic(kwargs)
        #match='4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide')
        return kwargs['local_ns']['ctx'].invoke(kwargs['local_ns']['find'], match=arg)

    @cell_magic
    def cmagic(self, line, cell):
        "my cell magic"
        return line, cell

    @line_cell_magic
    def lcmagic(self, line, cell=None):
        "Magic that works both as %lcmagic and as %%lcmagic"
        if cell is None:
            print("Called as line magic")
            return line
        else:
            print("Called as cell magic")
            return line, cell


ipyshell.register_magics(MyMagics)


# Goal: execute this after the IPython shell starts, embedded in the local namespace (so ctx (see below) is in locals()"
#START = '''
#@register_line_magic
#def click_invoke(ctx, f, *args, **kwargs):
#    return ctx.invoke(f, *args, **kwargs)
#'''

@click.group(invoke_without_command=True)
@click.pass_context
def cli(ctx):

    ipyshell()

    print('\nBack in caller program, moving along...\n')
    sys.exit(0)


if __name__ == '__main__':
    cli()



$ ./embed_class_long.py 
Dropping into IPython
In [1]: /home/cfg/python/click >>>: from pubchemmer.pubchemmer import cli

In [2]: /home/cfg/python/click >>>: from pubchemmer.pubchemmer import find

In [3]: /home/cfg/python/click >>>: %magic_cool 1
ic| embed_class_long.py:65 in magic_cool()- arg: '1'
ic| embed_class_long.py:66 in magic_cool()- kwargs: {'local_ns': {'ctx': <click.core.Context object at 0x7f3b7a547730>, '_ih': ['', 'from pubchemmer.pubchemmer import cli', 'from pubchemmer.pubchemmer import find', "get_ipython().run_line_magic('magic_cool', '1')"], '_oh': {}, '_dh': ['/home/cfg/python/click'], 'In': ['', 'from pubchemmer.pubchemmer import cli', 'from pubchemmer.pubchemmer import find', "get_ipython().run_line_magic('magic_cool', '1')"], 'Out': {}, 'get_ipython': <bound method InteractiveShell.get_ipython of <IPython.terminal.embed.InteractiveShellEmbed object at 0x7f3b7ed37670>>, 'exit': <IPython.core.autocall.ExitAutocall object at 0x7f3b7b032460>, 'quit': <IPython.core.autocall.ExitAutocall object at 0x7f3b7b032460>, '_i': 'from pubchemmer.pubchemmer import find', '_ii': 'from pubchemmer.pubchemmer import cli', '_iii': '', '_i1': 'from pubchemmer.pubchemmer import cli', 'cli': <Group cli>, '_i2': 'from pubchemmer.pubchemmer import find', 'find': <Command find>, '_i3': '%magic_cool 1'}}
ic| embed_class_long.py:68 in magic_cool()- args: Namespace(arg=1, option=None)

In [4]: /home/cfg/python/click >>>: %click_invoke 4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide
ic| embed_class_long.py:83 in click_invoke()- arg: '4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide'
ic| embed_class_long.py:84 in click_invoke()- kwargs: {'local_ns': {'ctx': <click.core.Context object at 0x7f3b7a547730>, '_ih': ['', 'from pubchemmer.pubchemmer import cli', 'from pubchemmer.pubchemmer import find', "get_ipython().run_line_magic('magic_cool', '1')", "get_ipython().run_line_magic('click_invoke', '4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide')"], '_oh': {}, '_dh': ['/home/cfg/python/click'], 'In': ['', 'from pubchemmer.pubchemmer import cli', 'from pubchemmer.pubchemmer import find', "get_ipython().run_line_magic('magic_cool', '1')", "get_ipython().run_line_magic('click_invoke', '4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide')"], 'Out': {}, 'get_ipython': <bound method InteractiveShell.get_ipython of <IPython.terminal.embed.InteractiveShellEmbed object at 0x7f3b7ed37670>>, 'exit': <IPython.core.autocall.ExitAutocall object at 0x7f3b7b032460>, 'quit': <IPython.core.autocall.ExitAutocall object at 0x7f3b7b032460>, '_i': '%magic_cool 1', '_ii': 'from pubchemmer.pubchemmer import find', '_iii': 'from pubchemmer.pubchemmer import cli', '_i1': 'from pubchemmer.pubchemmer import cli', 'cli': <Group cli>, '_i2': 'from pubchemmer.pubchemmer import find', 'find': <Command find>, '_i3': '%magic_cool 1', '_i4': '%click_invoke 4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide'}}
ic| pubchemmer.py:312 in find()- index: 0, match: (False, 41252806, True, Decimal('465'), True, True, True, 'AAADceB7MAAAAAAAAAAAAAAAAAAAAAAAAAA8YIAAAAAAAAABQAAAHgAQAAAADAzhmAYzxoPABACIAiRCUACCCAAhIgAIiIAObIiOZiLEsZuXOCjs1hPY6AeQwJAOgAABQAASAAAAAAKAACQAAAAAAAAAAA==', '4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide', '4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]-1-piperazinecarboxamide', '4-(2,3-dimethylphenyl)-<I>N</I>-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide', '4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide', '4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide', '4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide', 'InChI=1S/C22H29N3O2/c1-17-6-4-8-20(16-17)27-15-10-23-22(26)25-13-11-24(12-14-25)21-9-5-7-18(2)19(21)3/h4-9,16H,10-15H2,1-3H3,(H,23,26)', 'VUDRQTIWWOQCKA-UHFFFAOYSA-N', Decimal('3.9'), Decimal('367.225977'), 'C22H29N3O2', Decimal('367.5'), 'CC1=CC(=CC=C1)OCCNC(=O)N2CCN(CC2)C3=CC=CC(=C3C)C', 'CC1=CC(=CC=C1)OCCNC(=O)N2CCN(CC2)C3=CC=CC(=C3C)C', Decimal('44.8'), Decimal('367.225977'), 0, 27, 0, 0, 0, 0, 0, 1, -1, '1
5
255', '10  11  8
10  13  8
11  14  8
13  16  8
14  17  8
16  17  8
21  22  8
21  23  8
22  24  8
23  25  8
24  26  8
25  26  8', '8 17 32 33 31 40 40 39 39 27 30 26 22 29 34 21 25 37 36 38 19 24 18 28 20 23 35 15 15 15 15 16 16 16 16 2 9 12 12 12 4 7 14 14 11 11 11 13 13 5 1 3 6 10 10 10', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)

In [5]: /home/cfg/python/click >>>: cli.list_commands(ctx)
Out[5]: 
['dbimport',
 'dbquery',
 'dumpconfig',
 'find',
 'generate-sqlalchemy-model',
 'update-sdf-tags-from-pubchem']

In [6]: /home/cfg/python/click >>>: # I want to %pubchemmer find 4-(2,3-dimethylphenyl)-N-[2-(3-methylphenoxy)ethyl]piperazine-1-carboxamide

In [7]: /home/cfg/python/click >>>:  exit
Leaving Interpreter.

Back in caller program, moving along...


```
